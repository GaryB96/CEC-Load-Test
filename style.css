:root {
  --bg: #0b1426;
  --bg-elevated: #172448;
  --bg-card: #1b2d55;
  --bg-muted: #1a2b50;
  --text: #f2f6ff;
  --text-muted: #a9b9da;
  --accent: #3d9bff;
  /* New darker complementary accent for deeper contrast */
  --accent-dark: #2a4e7a;
  --accent-secondary: #9a6bff;
  --accent-soft: rgba(61, 155, 255, 0.22);
  --border: rgba(255,255,255,0.08);
  --radius: 14px;
  --gap: 0.85rem;
  --pad: 1.1rem;
  --shadow: 0 20px 50px rgba(4, 15, 40, 0.45);
}

* { box-sizing: border-box; }

body {
  font-family: "Inter", "Segoe UI", system-ui, -apple-system, sans-serif;
  margin: 0;
  background:
    radial-gradient(circle at 15% -10%, rgba(61,155,255,0.22), transparent 55%),
    radial-gradient(circle at 85% -20%, rgba(154,107,255,0.18), transparent 50%),
    var(--bg);
  color: var(--text);
  min-height: 100vh;
}

.wrap { max-width: 1080px; margin: 0 auto; padding: clamp(1.2rem, 1.5vw, 2rem); }
header.wrap { padding-bottom: 0.5rem; }

h1 { margin: 0 0 0.35rem; font-weight: 600; font-size: clamp(1.7rem, 2.2vw, 2.2rem); letter-spacing: -0.01em; }

h1 .tag {
  font-size: 0.75rem;
  background: rgba(61,155,255,0.18);
  color: var(--accent-dark);
  border: 1px solid rgba(42,78,122,0.3);
  border-radius: 999px;
  padding: 0.15rem 0.55rem;
  margin-left: 0.55rem;
}

.sub { color: var(--text-muted); margin: 0 0 1.2rem; }

h2 { margin: 0; font-size: 1.2rem; font-weight: 600; color: #ffffff; }

.grid { display: grid; grid-template-columns: repeat(12, 1fr); gap: var(--gap); }
.col-12 { grid-column: span 12; } .col-6 { grid-column: span 6; } .col-4 { grid-column: span 4; }
@media (max-width: 900px){ .col-6, .col-4 { grid-column: span 12; } }

.card {
  background: linear-gradient(145deg, rgba(19, 45, 85, 0.92), rgba(23, 33, 60, 0.92));
  border-radius: var(--radius);
  border: 1px solid rgba(255,255,255,0.12);
  padding: var(--pad);
  box-shadow: var(--shadow);
  position: relative;
}

.card::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  border: 1px solid rgba(42,78,122,0.16);
  pointer-events: none;
}

fieldset > legend {
  font-size: 0.95rem;
  letter-spacing: 0.05em;
  text-transform: uppercase;
  color: rgba(154,107,255,0.85);
  padding: 0 0.4rem; /* slightly larger horizontal padding for breathing room */
}

label { display: block; font-weight: 600; margin-bottom: 0.35rem; color: #f7f9ff; }

input[type="number"],
input[type="text"],
input[type="date"],
select {
  appearance: none;
  width: 100%;
  padding: 0.65rem 0.85rem;
  border-radius: 12px;
  border: 1px solid rgba(255,255,255,0.22);
  background: linear-gradient(135deg, rgba(255,255,255,0.18), rgba(255,255,255,0.08));
  color: var(--text);
  transition: border-color 150ms ease, box-shadow 150ms ease, background 150ms ease;
  font-size: 0.96rem;
}

input:focus,
select:focus {
  outline: none;
  border-color: var(--accent-secondary);
  box-shadow: 0 0 0 2px rgba(154,107,255,0.32);
  background: rgba(255,255,255,0.2);
}

.stack { display: grid; gap: 0.9rem; }

/* Ensure forms/cards that use .stack render children vertically by default
   (prevents accidental horizontal layout when nested grids are present) */
.card .stack {
  grid-auto-flow: row;
  grid-template-columns: 1fr;
}

.row {
  display: flex;
  gap: 0.85rem;
  flex-wrap: wrap;
  align-items: flex-end;
}

.row > input,
.row > select {
  flex: 1 1 220px;
  max-width: 260px;
  min-width: 180px;
}

.split { display: flex; flex-wrap: wrap; gap: 1rem; align-items: flex-end; }

.btn {
  border-radius: 11px;
  border: 1px solid rgba(42,78,122,0.34);
  background: linear-gradient(135deg, rgba(61,155,255,0.32), rgba(42,78,122,0.18));
  color: var(--text);
  padding: 0.6rem 1.15rem;
  font-weight: 600;
  letter-spacing: 0.01em;
  cursor: pointer;
  transition: transform 150ms ease, box-shadow 150ms ease, background 150ms ease;
}

.btn.secondary {
  background: linear-gradient(135deg, rgba(255,255,255,0.18), rgba(255,255,255,0.06));
  border: 1px solid rgba(255,255,255,0.28);
}

.btn.secondary:hover {
  background: rgba(255,255,255,0.24);
  border-color: rgba(255,255,255,0.36);
}
.btn.ghost {
  background: transparent;
  border: 1px dashed rgba(61,155,255,0.45);
  color: var(--accent);
  padding: 0.5rem 0.95rem;
}

.btn.ghost:hover {
  background: rgba(61,155,255,0.18);
  border-color: rgba(61,155,255,0.6);
}


.btn:hover {
  transform: translateY(-1px);
  background: linear-gradient(135deg, rgba(61,155,255,0.45), rgba(154,107,255,0.28));
  /* use the new darker accent in the shadow for a richer, darker theme */
  box-shadow: 0 10px 28px rgba(42,78,122,0.45);
}

.btn:active { transform: translateY(0); }

.share-hint {
  font-size: 0.85rem;
  color: var(--text-muted);
  margin-top: 0.35rem;
}

.help { font-size: 0.85rem; color: var(--text-muted); margin-top: 0.3rem; }

.list { display: grid; gap: 0.55rem; }

.list .item {
  display: grid;
  grid-template-columns: minmax(140px, 1fr) auto auto;
  gap: 0.7rem;
  align-items: center;
  padding: 0.6rem 0.85rem;
  border-radius: 11px;
  background: linear-gradient(135deg, rgba(22, 36, 68, 0.95), rgba(31, 27, 54, 0.85));
  border: 1px solid rgba(154,107,255,0.18);
}

.list .kill {
  border: 0;
  border-radius: 9px;
  padding: 0.42rem 0.75rem;
  background: rgba(255, 115, 135, 0.18);
  color: #ffc4d0;
  cursor: pointer;
  transition: background 140ms ease, color 140ms ease;
}

.list .kill:hover { background: rgba(255,115,135,0.32); color: #ffe2e8; }

.result,
.warn {
  border-radius: var(--radius);
  padding: 1rem 1.25rem;
  box-shadow: inset 0 0 0 1px rgba(255,255,255,0.1);
}

.result {
  background: linear-gradient(135deg, rgba(61,155,255,0.85), rgba(42,78,122,0.78));
  color: #fff;
}

.warn {
  background: linear-gradient(135deg, rgba(46, 184, 140, 0.82), rgba(46,184,140,0.6));
  color: #edfff9;
}

.big { font-size: 1.5rem; }

.notes { margin: 0.6rem 0 0; padding-left: 1.1rem; color: var(--text-muted); }

.mono { font-family: "JetBrains Mono", "SFMono-Regular", Menlo, Consolas, monospaced; color: #c8b7ff; }

#debug {
  white-space: pre-wrap;
  font-size: 0.8rem;
  color: rgba(183, 201, 255, 0.8);
  background: rgba(18, 30, 55, 0.75);
  padding: 0.75rem;
  border-radius: 11px;
  border: 1px solid rgba(255,255,255,0.08);
}

.computed-areas {
  display: flex;
  gap: 1.2rem;
  flex-wrap: wrap;
  padding: 0.9rem 1.1rem;
  border-radius: 12px;
  background: linear-gradient(180deg, rgba(42,78,122,0.08), rgba(27,45,75,0.06));
  border: 1px solid rgba(42,78,122,0.18);
}

.computed-areas > div { min-width: 160px; }

.stat-label {
  font-size: 0.75rem;
  letter-spacing: 0.06em;
  text-transform: uppercase;
  color: rgba(193, 214, 255, 0.85);
  font-weight: 600;
  margin-bottom: 0.2rem;
}

.stat-value {
  font-size: 1.2rem;
  font-weight: 600;
  color: #ffffff;
}

::placeholder {
  color: rgba(242,246,255,0.65);
  opacity: 1;
}

input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type="number"] { appearance: textfield; -moz-appearance: textfield; }

select {
  background-image: linear-gradient(45deg, transparent 50%, rgba(255,255,255,0.4) 50%), linear-gradient(135deg, rgba(255,255,255,0.4) 50%, transparent 50%);
  background-position: calc(100% - 18px) calc(50% - 3px), calc(100% - 13px) calc(50% - 3px);
  background-size: 6px 6px;
  background-repeat: no-repeat;
}

select:focus {
  background-position: calc(100% - 18px) calc(50% - 1px), calc(100% - 13px) calc(50% - 1px);
}

select option {
  background: #1f2750;
  color: var(--text);
}

select option:hover,
select option:checked {
  background: rgba(154,107,255,0.45);
  color: #ffffff;
}

#systemNotes {
  width: 100%;
  padding: 0.65rem 0.85rem;
  border-radius: 12px;
  border: 1px solid rgba(255,255,255,0.12);
  background: linear-gradient(135deg, rgba(255,255,255,0.06), rgba(255,255,255,0.03));
  color: var(--text);
  resize: vertical;
  min-height: 110px;
  font-size: 0.95rem;
}

.toggle-row {
  display: flex;
  gap: 0.6rem;
  align-items: center;
  margin-top: 0.5rem;
}

/* Toggle switch */
.switch {
  --w: 42px;
  --h: 24px;
  display: inline-block;
  position: relative;
  width: var(--w);
  height: var(--h);
}
.switch input { 
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}
.switch .slider {
  position: absolute;
  cursor: pointer;
  top: 0; left: 0; right: 0; bottom: 0;
  background: rgba(255,255,255,0.12);
  border-radius: 999px;
  transition: background 160ms ease, box-shadow 160ms ease;
  box-shadow: inset 0 0 0 1px rgba(255,255,255,0.04);
}
.switch .slider::before {
  content: "";
  position: absolute;
  height: calc(var(--h) - 8px);
  width: calc(var(--h) - 8px);
  left: 4px;
  top: 4px;
  background: var(--bg-card);
  border-radius: 50%;
  transition: transform 160ms ease, background 160ms ease;
  box-shadow: 0 6px 12px rgba(2,6,20,0.45);
}
.switch input:checked + .slider {
  background: linear-gradient(135deg, var(--accent), var(--accent-secondary));
}
.switch input:checked + .slider::before {
  transform: translateX(calc(var(--w) - var(--h)));
  background: white;
}

#resetBtn { min-width: 140px; }

@media (max-width: 640px) {
  .row > input,
  .row > select { flex: 1 1 100%; max-width: none; }
}

#spaceHeatName,
#spaceHeatValue,
#spaceHeatVoltage,
#airCondName,
#airCondValue,
#airCondVoltage,
#rangeName,
#rangeCount,
#rangeWatts,
#applianceName,
#applianceWatts {
  flex: 1 1 220px;
  max-width: 260px;
  min-width: 180px;
  padding: 0.65rem 0.85rem;
  border-radius: 12px;
  background: linear-gradient(135deg, rgba(255,255,255,0.18), rgba(255,255,255,0.08));
  border: 1px solid rgba(255,255,255,0.22);
  color: var(--text);
}

#spaceHeatVoltage,
#airCondVoltage { max-width: 200px; }

.collapsible legend {
  margin: 0;
  padding: 0;
  border: 0;
}

.collapse-toggle {
  width: 100%;
  display: flex;
  align-items: center;

}

/* Collapse toggle should look like a transparent, theme-aware button
   â€” avoid default browser button backgrounds (white) by forcing
   background, border and color to match the dark theme. */
.collapse-toggle {
  background: transparent;
  border: 0;
  /* Use the purple accent used earlier for legends so headers match the original look */
  color: var(--accent-secondary);
  padding: 0.45rem 0.5rem;
  border-radius: 10px;
  gap: 0.5rem;
  cursor: pointer;
  font-weight: 700;
}

.collapse-toggle span {
  color: inherit;
}

.collapse-toggle:hover {
  background: rgba(154,107,255,0.04); /* subtle purple-tinted hover */
  color: rgba(154,107,255,0.98);
}

.collapse-toggle:active {
  background: rgba(255,255,255,0.03);
}

.update-banner {
  position: fixed;
  top: 12px;
  left: 50%;
  transform: translateX(-50%);
  /* Fully opaque, single-color background for unmistakable contrast */
  background: linear-gradient(90deg, #1a73e8 0%, #8a3cff 100%);
  color: #ffffff;
  border: 0;
  padding: 12px 16px;
  border-radius: 12px;
  z-index: 9999;
  box-shadow: 0 10px 30px rgba(10,20,50,0.85);
}
.update-banner {
  opacity: 0;
  transform: translateY(-8px) translateX(-50%);
  transition: opacity 360ms cubic-bezier(.2,.9,.2,1), transform 360ms cubic-bezier(.2,.9,.2,1);
}

.update-banner.show {
  opacity: 1;
  transform: translateY(0) translateX(-50%);
}
.update-banner .update-inner { display:flex; gap:12px; align-items:center; }
.update-banner .update-actions { display:flex; gap:8px; }

/* Spinner shown on the reload button while the SW is activating */
#reloadApp { position: relative; }
#reloadApp.loading { pointer-events: none; opacity: 1; }
#reloadApp.loading::after {
  content: "";
  position: absolute;
  right: 12px;
  top: 50%;
  transform: translateY(-50%);
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255,255,255,0.18);
  border-top-color: #ffffff;
  border-radius: 50%;
  animation: banner-spin 0.75s linear infinite;
}

/* Make the banner buttons very obvious: Reload is a bright solid primary, Dismiss is a clear outline */
#reloadApp {
  background: #ffffff;
  color: #0b1426;
  font-weight: 700;
  border-radius: 10px;
  border: 0;
  padding: 0.55rem 0.9rem;
  box-shadow: 0 8px 20px rgba(26, 35, 50, 0.35);
}
#reloadApp:hover { transform: translateY(-1px); box-shadow: 0 10px 26px rgba(26,35,50,0.45); }

#dismissUpdate {
  background: transparent;
  color: #ffffff;
  border: 2px solid rgba(255,255,255,0.22);
  padding: 0.45rem 0.8rem;
  border-radius: 10px;
  font-weight: 600;
}
#dismissUpdate:hover { background: rgba(255,255,255,0.06); }

@keyframes banner-spin { to { transform: translateY(-50%) rotate(360deg); } }

.collapse-toggle:hover .chevron {
  display: inline-flex;
  width: 0.75rem;
  height: 0.75rem;
  border-right: 2px solid currentColor;
  border-bottom: 2px solid currentColor;
  transform: rotate(45deg);
  transition: transform 160ms ease;
  opacity: 0.75;
  margin-right: 0.35rem;
}

.collapse-toggle:focus-visible {
  outline: 2px solid var(--accent-secondary);
  outline-offset: 4px;
  border-radius: 10px;
}

.chevron {
  display: inline-flex;
  width: 0.75rem;
  height: 0.75rem;
  border-right: 2px solid currentColor;
  border-bottom: 2px solid currentColor;
  transform: rotate(45deg);
  transition: transform 160ms ease;
  opacity: 0.75;
  margin-right: 0.35rem;
}

.collapsible.collapsed .chevron {
  display: inline-flex;
  width: 0.75rem;
  height: 0.75rem;
  border-right: 2px solid currentColor;
  border-bottom: 2px solid currentColor;
  transform: rotate(45deg);
  transition: transform 160ms ease;
  opacity: 0.75;
  margin-right: 0.35rem;
}

.collapse-body {
  margin-top: 0.9rem;
  /* Animated open/close using max-height to allow smooth slide */
  max-height: 2000px; /* large default to allow content */
  opacity: 1;
  /* slower, smoother animation */
  transition: max-height 1000ms cubic-bezier(.2,.9,.2,1), opacity 700ms ease;
  overflow: hidden;
}

.collapsible.collapsed .collapse-body {
  max-height: 0;
  opacity: 0;
}

/* while actively animating we can set a smoother timing */
.collapse-body.collapsing {
  transition: max-height 1080ms cubic-bezier(.2,.9,.2,1), opacity 760ms ease;
}


.dim-helper {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  gap: 0.6rem;
  margin-top: 0.45rem;
}

.dim-rows {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.dim-row {
  display: flex;
  align-items: center;
  gap: 0.45rem;
  flex-wrap: wrap;
}

.dim-row .dim-length,
.dim-row .dim-length,
.dim-row .dim-width {
  flex: 0 0 110px; /* fixed-ish narrow helper fields */
  max-width: 110px;
  min-width: 70px;
  padding: 0.45rem 0.6rem;
}

/* Compact main area inputs */
#groundUpperArea, #basementArea {
  max-width: 140px;
  min-width: 100px;
  flex: 0 0 auto;
  padding: 0.5rem 0.65rem;
}

.dim-footer {
  display: flex;
  align-items: center;
  gap: 0.6rem;
  flex-wrap: wrap;
}

.dim-remove {
  margin-left: auto;
  border: 0;
  border-radius: 8px;
  padding: 0.35rem 0.7rem;
  background: rgba(255,115,135,0.18);
  color: #ff8ca0;
  font-size: 0.78rem;
  cursor: pointer;
  transition: background 150ms ease, color 150ms ease;
}

.dim-remove:hover {
  background: rgba(255,115,135,0.28);
  color: #ffd0d6;
}


.dim-symbol {
  color: var(--text-muted);
  font-weight: 600;
}

.dim-area {
  font-weight: 600;
  color: #ffffff;
  min-width: 3.5ch;
  text-align: right;
}

.dim-note {
  margin-top: 0.35rem;
}

.fixed-value {
  padding: 0.65rem 0.85rem;
  border-radius: 12px;
  border: 1px solid rgba(255,255,255,0.18);
  background: rgba(20, 34, 62, 0.8);
  color: var(--text);
  font-weight: 600;
}

.action-row {
  justify-content: flex-end;
}


.meta-bar {
  display: flex;
  gap: 1.15rem;
  flex-wrap: wrap;
  align-items: flex-end;
  margin-bottom: 1.5rem;
}

.meta-field {
  flex: 1 1 220px;
  max-width: 280px;
  display: flex;
  flex-direction: column;
  gap: 0.35rem;
}

.meta-field input {
  width: 100%;
}

/* Sticky calculator styles */
.sticky-calc {
  position: sticky;
  top: 12px;
  z-index: 40;
}

@media (max-width: 900px){
  .sticky-calc { position: -webkit-sticky; top: 8px; }
}

/* Make the inline calc controls behave like other inputs (flexible width) */
.inline-watts .row > select, .inline-watts .row > input { max-width: 260px; min-width: 180px; flex: 1 1 220px; }
.inline-watts .fixed-value { background: rgba(255,255,255,0.06); color: #fff; min-width: 110px; text-align: right; }

/* Sticky wrapper that respects the main.wrap width and centers with content */
.calc-sticky-wrapper {
  position: sticky;
  top: 12px;
  z-index: 60;
  display: block;
  margin: 0 -1px 0 -1px; /* avoid visual shift with card borders */
  /* Make the sticky wrapper visually solid when pinned */
  background: linear-gradient(145deg, rgba(19, 45, 85, 0.98), rgba(23, 33, 60, 0.98));
  border-radius: 10px;
  padding: 0.55rem 0.8rem;
  box-shadow: 0 10px 28px rgba(4, 15, 40, 0.45);
  border: 1px solid rgba(255,255,255,0.06);
}

@media (max-width: 900px){
  .calc-sticky-wrapper { top: 8px; }
}

/* Footer / version display */
.site-footer {
  max-width: 1080px;
  margin: 0 auto;
  padding: 6px clamp(1.2rem, 1.5vw, 2rem);
  display: flex;
  justify-content: flex-end;
  align-items: center;
  color: var(--text-muted);
  font-size: 0.85rem;
}
.site-footer .version {
  background: transparent;
  padding: 6px 8px;
  border-radius: 8px;
  color: var(--text-muted);
}

/* Minimal toast used for short in-app notifications (non-interrupting) */
#appToast {
  min-width: 160px;
  max-width: 90vw;
  background: rgba(20,30,50,0.92);
  color: var(--text);
  padding: 10px 14px;
  border-radius: 10px;
  text-align: center;
  box-shadow: 0 8px 24px rgba(0,0,0,0.6);
  font-weight: 600;
  pointer-events: none;
}

/* Compact widths for the inline watts calculator controls */
#calcValue {
  max-width: 120px;
  min-width: 80px;
  flex: 0 0 auto;
  padding: 0.45rem 0.6rem;
}

#calcVoltage {
  max-width: 110px;
  min-width: 70px;
  flex: 0 0 auto;
  padding: 0.45rem 0.6rem;
}

@media (max-width: 640px) {
  #calcValue, #calcVoltage { flex: 1 1 100%; max-width: none; min-width: 0; }
}

/* Space Conditioning specific compact controls (narrow dropdowns & watt inputs)
   Scoped to #section-space so appliance name inputs remain untouched. */
#section-space #spaceHeatType,
#section-space #airCondType {
  max-width: 100px;
  min-width: 70px;
  flex: 0 0 auto;
  /* keep the same vertical padding as main inputs so height doesn't change */
  padding: 0.65rem 0.6rem;
  line-height: 1.1; /* ensure text vertical rhythm matches other controls */
}

#section-space #spaceHeatValue,
#section-space #airCondValue {
  max-width: 110px;
  min-width: 80px;
  flex: 0 0 auto;
  /* maintain vertical padding so control height stays consistent */
  padding: 0.65rem 0.6rem;
  line-height: 1.1;
}

@media (max-width: 640px) {
  #section-space #spaceHeatType,
  #section-space #airCondType,
  #section-space #spaceHeatValue,
  #section-space #airCondValue {
    flex: 1 1 100%;
    max-width: none;
    min-width: 0;
  }
}

/* Narrow the interlock dropdown to only the width needed for the 'yes' option
   Keep vertical padding equal to other inputs so height is unchanged. */
#interlock {
  max-width: 250px; /* conservative width to show 'yes' comfortably */
  flex: 0 0 auto;
  padding: 0.65rem 0.6rem; /* keep vertical padding same as other inputs */
  box-sizing: border-box;
}

@media (max-width: 640px) {
  #interlock { flex: 1 1 100%; max-width: none; min-width: 0; }
}

/* Reduce vertical spacing between the appliance-name input row and the watt inputs/list below
   only inside the Space Conditioning section so other sections are unaffected. */
#section-space .col-12 > .list {
  /* tighten vertical spacing for list items */
  gap: 0.35rem; /* was 0.55rem globally */
  margin-bottom: 0.25rem; /* bring the following controls closer */
}

#section-space .col-12 > .split {
  gap: 0.5rem; /* was 1rem globally for .split */
}

#section-space .split .row {
  gap: 0.6rem; /* slightly tighter than global .row gap (0.85rem) */
  align-items: flex-end;
}
